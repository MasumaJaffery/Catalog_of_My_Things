CREATE DATABASE catalog_of_my_things 

CREATE TABLE item (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    publish_date DATE NOT NULL,
    archived BOOLEAN NOT NULL,
    genre VARCHAR(100),
    author VARCHAR(100),
    source VARCHAR(100),
    label VARCHAR(100),
    book_id INT,
    game_id INT,
    author_id INT,
    label_id INT,
    FOREIGN KEY (book_id) REFERENCES book (id),
    FOREIGN KEY (game_id) REFERENCES game (id),
    FOREIGN KEY (author_id) REFERENCES author (id),
    FOREIGN KEY (label_id) REFERENCES label (id)
);

)
CREATE TABLE Game (
    id INT GENERATED ALWAYS AS IDENTITY,
    title VARCHAR(30) NOT NULL,
    publish_date DATE NOT NULL,
    multiplayer BOOLEAN NOT NULL,
    last_played_at DATE NOT NULL,
    genre_id INT DEFAULT NULL,
    source_id INT DEFAULT NULL,
    label_id INT DEFAULT NULL,
    item_id INT,
    PRIMARY KEY(id),
    CONSTRAINT FK_item FOREIGN KEY (item_id) REFERENCES item (id)
);


CREATE TABLE
    Author (
        id INT GENERATED ALWAYS AS IDENTITY,
        first_name VARCHAR(30) NOT NULL,
        last_name VARCHAR(30) NOT NULL,
        PRIMARY KEY(id)
    );

-- This table stores information about the relationship between games and authors

CREATE TABLE
    Creation(
        item_id INT,
        author_id INT,
        PRIMARY KEY(item_id, author) -- A constraint to ensures that every author/item exists in the related table
        CONSTRAINT FK_author FOREIGN KEY (author_id) REFERENCES Author (id) CONSTRAINT FK_item FOREIGN KEY (item_id) REFERENCES Game (id)
    );

CREATE TABLE
    genres (
        id INT GENERATED ALWAYS AS IDENTITY,
        name VARCHAR(255) NOT NULL,
        PRIMARY KEY(id)
    );

CREATE TABLE music_albums (
    id INT GENERATED ALWAYS AS IDENTITY,
    title VARCHAR(255) NOT NULL,
    publish_date DATE NOT NULL,
    archived BOOLEAN NOT NULL,
    on_spotify BOOLEAN NOT NULL,
    item_id INT DEFAULT NULL,
    -- Foreign key that references the item table
    PRIMARY KEY(id),
    CONSTRAINT FK_item FOREIGN KEY (item_id) REFERENCES item (id)
);


CREATE TABLE Creation(
    item_id INT,
    author_id INT,
    PRIMARY KEY(item_id, author) -- A constraint to ensures that every author/item exists in the related table
    CONSTRAINT FK_author FOREIGN KEY (author_id) REFERENCES Author (id)
    CONSTRAINT FK_item FOREIGN KEY (item_id) REFERENCES Game (id)
);

CREATE TABLE Book (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    publisher VARCHAR(50),
    cover_state VARCHAR(50),
    archieved BOOLEAN NOT NULL,
    publish_date DATE NOT NULL,
    item_id Foreign Key (id) REFERENCES item (id) NOT NULL
);
    
CREATE TABLE Label (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    title VARCHAR(255),
    color VARCHAR(100),
    publish_date DATE NOT NULL,
    item_id INT NOT NULL
    book_id INT NOT NULL
)

-- schema for the 'movies' table
CREATE TABLE movies (
    id SERIAL PRIMARY KEY,
    label VARCHAR(255) NOT NULL,
    author VARCHAR(255),
    genre VARCHAR(255) NOT NULL,
    publish_date DATE NOT NULL,
    silent BOOLEAN NOT NULL,
    archived BOOLEAN NOT NULL,
    item_id INT,
    FOREIGN KEY (item_id) REFERENCES item (id)
);


-- schema for the 'sources' table
CREATE TABLE sources (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    item_id INT,
    FOREIGN KEY (item_id) REFERENCES item (id)
);

